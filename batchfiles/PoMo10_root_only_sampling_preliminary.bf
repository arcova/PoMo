inp =  "/Volumes/Temp/NDM/PoMo_Phyl/HyPhy/ILS.txt";
out2 = "/Volumes/Temp/NDM/PoMo_Phyl/HyPhy/ILS_out.txt";
user_defining:=0;
user_defined_Ppol:=1.0;
scale_Ppol:=1.0;
GeneticCodeExclusions9="TGG,TGT,TTA,TTC,TTG,TTT";
/*GeneticCodeExclusions9=GeneticCodeExclusions;*/
DataSet myData = ReadDataFile(inp);
DataSetFilter filteredData = CreateFilter(myData,3,"","","TGG,TGT,TTA,TTC,TTG,TTT");
HarvestFrequencies (F, filteredData, 3, 3, 1);

/*Define global parameters*/
global kappa=0.01;
global mu=0.01;
mac:=mu;
mag:=kappa;
mat:=mu;
mca:=mu;
mct:=kappa;
mcg:=mu;
mgc:=mu;
mga:=kappa;
mgt:=mu;
mta:=mu;
mtc:=kappa;
mtg:=mu;

sc := 0.0;
sa := 0.0;
st := 0.0;
sg := 0.0;

rateCatMut := 1.0;

rateCatSel := 1.0;

D := 0.1;

/*Define ancestral frequencies*/
/*Freqs=F;*/
if (user_defining)
{
	Ppol:=user_defined_Ppol;
}
else
{
Ppol := ((F[4]+F[5]+F[6]+F[7]+F[8]+F[9]+F[10]+F[11]+F[12]+F[13]+F[14]+F[15]+F[16]+F[17]+F[18]+F[19]+F[20]+F[21]+F[22]+F[23]+F[24]+F[25]+F[26]+F[27]+F[28]+F[29]+F[30]+F[31]+F[32]+F[33]+F[34]+F[35]+F[36]+F[37]+F[38]+F[39]+F[40]+F[41]+F[42]+F[43]+F[44]+F[45]+F[46]+F[47]+F[48]+F[49]+F[50]+F[51]+F[52]+F[53]+F[54]+F[55]+F[56]+F[57])*scale_Ppol);
}

/*fprintf (stdout, "\n\n --------------------- Obs. Freqs --------------------- \n\n", F,"\n",F[0]+F[1]+F[2]+F[3]);*/

F[0]=F[0]/(F[0]+F[1]+F[2]+F[3]);
F[1]=F[1]/(F[0]+F[1]+F[2]+F[3]);
F[2]=F[2]/(F[0]+F[1]+F[2]+F[3]);
F[3]=F[3]/(F[0]+F[1]+F[2]+F[3]);

/*fprintf (stdout, "\n\n --------------------- Norm. Nuc Freqs --------------------- \n\n", F,"\n",F[0],"\n",F[1],"\n",F[2],"\n",F[3],"\n",F[0]+F[1]+F[2]+F[3]);*/

norm := ( F[0] * (mac * F[1] + mag * F[2] + mat * F[3]) ) + ( F[3] * (mtc * F[1] + mtg * F[2] + mta * F[0]) ) + ( F[1] * (mca * F[0] + mcg * F[2] + mct * F[3]) ) + ( F[2] * (mga * F[0] + mgc * F[1] + mgt * F[3]) );

Freqs={{F[0] * (1.0 - Ppol) }
{ F[1] * (1.0 - Ppol) }
{ F[2] * (1.0 - Ppol) }
{ F[3] * (1.0 - Ppol) }
{ Ppol * ( ( F[0] * mac * F[1] * 0.353485762379 ) + ( F[1] * mca * F[0] * 0.0392761958199 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.17674288119 ) + ( F[1] * mca * F[0] * 0.0441857202974 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.11782858746 ) + ( F[1] * mca * F[0] * 0.0504979660541 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.0883714405948 ) + ( F[1] * mca * F[0] * 0.0589142937298 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.0706971524758 ) + ( F[1] * mca * F[0] * 0.0706971524758 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.0589142937298 ) + ( F[1] * mca * F[0] * 0.0883714405948 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.0504979660541 ) + ( F[1] * mca * F[0] * 0.11782858746 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.0441857202974 ) + ( F[1] * mca * F[0] * 0.17674288119 ) ) / norm }
{ Ppol * ( ( F[0] * mac * F[1] * 0.0392761958199 ) + ( F[1] * mca * F[0] * 0.353485762379 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.353485762379 ) + ( F[2] * mga * F[0] * 0.0392761958199 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.17674288119 ) + ( F[2] * mga * F[0] * 0.0441857202974 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.11782858746 ) + ( F[2] * mga * F[0] * 0.0504979660541 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.0883714405948 ) + ( F[2] * mga * F[0] * 0.0589142937298 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.0706971524758 ) + ( F[2] * mga * F[0] * 0.0706971524758 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.0589142937298 ) + ( F[2] * mga * F[0] * 0.0883714405948 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.0504979660541 ) + ( F[2] * mga * F[0] * 0.11782858746 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.0441857202974 ) + ( F[2] * mga * F[0] * 0.17674288119 ) ) / norm }
{ Ppol * ( ( F[0] * mag * F[2] * 0.0392761958199 ) + ( F[2] * mga * F[0] * 0.353485762379 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.353485762379 ) + ( F[3] * mta * F[0] * 0.0392761958199 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.17674288119 ) + ( F[3] * mta * F[0] * 0.0441857202974 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.11782858746 ) + ( F[3] * mta * F[0] * 0.0504979660541 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.0883714405948 ) + ( F[3] * mta * F[0] * 0.0589142937298 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.0706971524758 ) + ( F[3] * mta * F[0] * 0.0706971524758 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.0589142937298 ) + ( F[3] * mta * F[0] * 0.0883714405948 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.0504979660541 ) + ( F[3] * mta * F[0] * 0.11782858746 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.0441857202974 ) + ( F[3] * mta * F[0] * 0.17674288119 ) ) / norm }
{ Ppol * ( ( F[0] * mat * F[3] * 0.0392761958199 ) + ( F[3] * mta * F[0] * 0.353485762379 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.353485762379 ) + ( F[2] * mgc * F[1] * 0.0392761958199 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.17674288119 ) + ( F[2] * mgc * F[1] * 0.0441857202974 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.11782858746 ) + ( F[2] * mgc * F[1] * 0.0504979660541 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.0883714405948 ) + ( F[2] * mgc * F[1] * 0.0589142937298 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.0706971524758 ) + ( F[2] * mgc * F[1] * 0.0706971524758 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.0589142937298 ) + ( F[2] * mgc * F[1] * 0.0883714405948 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.0504979660541 ) + ( F[2] * mgc * F[1] * 0.11782858746 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.0441857202974 ) + ( F[2] * mgc * F[1] * 0.17674288119 ) ) / norm }
{ Ppol * ( ( F[1] * mcg * F[2] * 0.0392761958199 ) + ( F[2] * mgc * F[1] * 0.353485762379 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.353485762379 ) + ( F[3] * mtc * F[1] * 0.0392761958199 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.17674288119 ) + ( F[3] * mtc * F[1] * 0.0441857202974 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.11782858746 ) + ( F[3] * mtc * F[1] * 0.0504979660541 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.0883714405948 ) + ( F[3] * mtc * F[1] * 0.0589142937298 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.0706971524758 ) + ( F[3] * mtc * F[1] * 0.0706971524758 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.0589142937298 ) + ( F[3] * mtc * F[1] * 0.0883714405948 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.0504979660541 ) + ( F[3] * mtc * F[1] * 0.11782858746 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.0441857202974 ) + ( F[3] * mtc * F[1] * 0.17674288119 ) ) / norm }
{ Ppol * ( ( F[1] * mct * F[3] * 0.0392761958199 ) + ( F[3] * mtc * F[1] * 0.353485762379 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.353485762379 ) + ( F[3] * mtg * F[2] * 0.0392761958199 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.17674288119 ) + ( F[3] * mtg * F[2] * 0.0441857202974 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.11782858746 ) + ( F[3] * mtg * F[2] * 0.0504979660541 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.0883714405948 ) + ( F[3] * mtg * F[2] * 0.0589142937298 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.0706971524758 ) + ( F[3] * mtg * F[2] * 0.0706971524758 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.0589142937298 ) + ( F[3] * mtg * F[2] * 0.0883714405948 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.0504979660541 ) + ( F[3] * mtg * F[2] * 0.11782858746 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.0441857202974 ) + ( F[3] * mtg * F[2] * 0.17674288119 ) ) / norm }
{ Ppol * ( ( F[2] * mgt * F[3] * 0.0392761958199 ) + ( F[3] * mtg * F[2] * 0.353485762379 ) ) / norm }};

/*fprintf (stdout, "\n\n --------------------- Freqs --------------------- \n\n", Freqs,"\n",Freqs[0]+Freqs[1]+Freqs[2]+Freqs[3],"\n",Ppol);*/

/*Freqs={{F[0]}{F[1]}{F[2]}{F[3]}{F[4]}{F[5]}{F[6]}{F[7]}{F[8]}{F[9]}{F[10]}{F[11]}{F[12]}{F[13]}{F[14]}{F[15]}{F[16]}{F[17]}{F[18]}{F[19]}{F[20]}{F[21]}{F[22]}{F[23]}{F[24]}{F[25]}{F[26]}{F[27]}{F[28]}{F[29]}{F[30]}{F[31]}{F[32]}{F[33]}{F[34]}{F[35]}{F[36]}{F[37]}{F[38]}{F[39]}{F[40]}{F[41]}{F[42]}{F[43]}{F[44]}{F[45]}{F[46]}{F[47]}{F[48]}{F[49]}{F[50]}{F[51]}{F[52]}{F[53]}{F[54]}{F[55]}{F[56]}{F[57]}};*/

/*Define matrix: depends on global mutational parameters (mac etc.), on D, and on the branch-specific parameters t and sc*/ 


matrix1 = {{*,0.0,0.0,0.0,t * mac * rateCatMut * F[1],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mag * rateCatMut * F[2],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mat * rateCatMut * F[3],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mca * rateCatMut * F[0],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mcg * rateCatMut * F[2],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mct * rateCatMut * F[3],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mga * rateCatMut * F[0],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mgc * rateCatMut * F[1],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mgt * rateCatMut * F[3],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mta * rateCatMut * F[0],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mtc * rateCatMut * F[1],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * mtg * rateCatMut * F[2]}
{t * D * 100 * 9.0 /( ( (1.0 + rateCatSel * (sc - sa) ) + 9.0 ) * 10.0),0.0,0.0,0.0,*,t * D * 100 * 1.0 * 9.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 1.0) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,t * D * 100 * 8.0 * 2.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 2.0) + 8.0 ) * 10.0),*,t * D * 100 * 2.0 * 8.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 2.0) + 8.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,t * D * 100 * 7.0 * 3.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 3.0) + 7.0 ) * 10.0),*,t * D * 100 * 3.0 * 7.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 3.0) + 7.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 6.0 * 4.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 4.0) + 6.0 ) * 10.0),*,t * D * 100 * 4.0 * 6.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 4.0) + 6.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 5.0 * 5.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 5.0) + 5.0 ) * 10.0),*,t * D * 100 * 5.0 * 5.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 5.0) + 5.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 4.0 * 6.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 6.0) + 4.0 ) * 10.0),*,t * D * 100 * 6.0 * 4.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 6.0) + 4.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 3.0 * 7.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 7.0) + 3.0 ) * 10.0),*,t * D * 100 * 7.0 * 3.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 7.0) + 3.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 2.0 * 8.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 8.0) + 2.0 ) * 10.0),*,t * D * 100 * 8.0 * 2.0 * (1.0 + rateCatSel * (sc - sa) ) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 8.0) + 2.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,t * D * 100 * 9.0 * (1.0 + rateCatSel * (sc - sa)) /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 9.0) + 1.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 1.0 * 9.0 /( ( ( (1.0 + rateCatSel * (sc - sa) ) * 9.0) + 1.0 ) * 10.0),*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{t * D * 100 * 9.0 /( ( (1.0 + rateCatSel * (sg - sa) ) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,*,t * D * 100 * 1.0 * 9.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 1.0) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 8.0 * 2.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 2.0) + 8.0 ) * 10.0),*,t * D * 100 * 2.0 * 8.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 2.0) + 8.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 7.0 * 3.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 3.0) + 7.0 ) * 10.0),*,t * D * 100 * 3.0 * 7.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 3.0) + 7.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 6.0 * 4.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 4.0) + 6.0 ) * 10.0),*,t * D * 100 * 4.0 * 6.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 4.0) + 6.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 5.0 * 5.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 5.0) + 5.0 ) * 10.0),*,t * D * 100 * 5.0 * 5.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 5.0) + 5.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 4.0 * 6.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 6.0) + 4.0 ) * 10.0),*,t * D * 100 * 6.0 * 4.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 6.0) + 4.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 3.0 * 7.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 7.0) + 3.0 ) * 10.0),*,t * D * 100 * 7.0 * 3.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 7.0) + 3.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 2.0 * 8.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 8.0) + 2.0 ) * 10.0),*,t * D * 100 * 8.0 * 2.0 * (1.0 + rateCatSel * (sg - sa) ) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 8.0) + 2.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,t * D * 100 * 9.0 * (1.0 + rateCatSel * (sg - sa)) /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 9.0) + 1.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 1.0 * 9.0 /( ( ( (1.0 + rateCatSel * (sg - sa) ) * 9.0) + 1.0 ) * 10.0),*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{t * D * 100 * 9.0 /( ( (1.0 + rateCatSel * (st - sa) ) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,*,t * D * 100 * 1.0 * 9.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 1.0) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 8.0 * 2.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 2.0) + 8.0 ) * 10.0),*,t * D * 100 * 2.0 * 8.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 2.0) + 8.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 7.0 * 3.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 3.0) + 7.0 ) * 10.0),*,t * D * 100 * 3.0 * 7.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 3.0) + 7.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 6.0 * 4.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 4.0) + 6.0 ) * 10.0),*,t * D * 100 * 4.0 * 6.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 4.0) + 6.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 5.0 * 5.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 5.0) + 5.0 ) * 10.0),*,t * D * 100 * 5.0 * 5.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 5.0) + 5.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 4.0 * 6.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 6.0) + 4.0 ) * 10.0),*,t * D * 100 * 6.0 * 4.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 6.0) + 4.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 3.0 * 7.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 7.0) + 3.0 ) * 10.0),*,t * D * 100 * 7.0 * 3.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 7.0) + 3.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 2.0 * 8.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 8.0) + 2.0 ) * 10.0),*,t * D * 100 * 8.0 * 2.0 * (1.0 + rateCatSel * (st - sa) ) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 8.0) + 2.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,t * D * 100 * 9.0 * (1.0 + rateCatSel * (st - sa)) /( ( ( (1.0 + rateCatSel * (st - sa) ) * 9.0) + 1.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 1.0 * 9.0 /( ( ( (1.0 + rateCatSel * (st - sa) ) * 9.0) + 1.0 ) * 10.0),*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,t * D * 100 * 9.0 /( ( (1.0 + rateCatSel * (sg - sc) ) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,*,t * D * 100 * 1.0 * 9.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 1.0) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 8.0 * 2.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 2.0) + 8.0 ) * 10.0),*,t * D * 100 * 2.0 * 8.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 2.0) + 8.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 7.0 * 3.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 3.0) + 7.0 ) * 10.0),*,t * D * 100 * 3.0 * 7.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 3.0) + 7.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 6.0 * 4.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 4.0) + 6.0 ) * 10.0),*,t * D * 100 * 4.0 * 6.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 4.0) + 6.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 5.0 * 5.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 5.0) + 5.0 ) * 10.0),*,t * D * 100 * 5.0 * 5.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 5.0) + 5.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 4.0 * 6.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 6.0) + 4.0 ) * 10.0),*,t * D * 100 * 6.0 * 4.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 6.0) + 4.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 3.0 * 7.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 7.0) + 3.0 ) * 10.0),*,t * D * 100 * 7.0 * 3.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 7.0) + 3.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 2.0 * 8.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 8.0) + 2.0 ) * 10.0),*,t * D * 100 * 8.0 * 2.0 * (1.0 + rateCatSel * (sg - sc) ) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 8.0) + 2.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,t * D * 100 * 9.0 * (1.0 + rateCatSel * (sg - sc)) /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 9.0) + 1.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 1.0 * 9.0 /( ( ( (1.0 + rateCatSel * (sg - sc) ) * 9.0) + 1.0 ) * 10.0),*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,t * D * 100 * 9.0 /( ( (1.0 + rateCatSel * (st - sc) ) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,*,t * D * 100 * 1.0 * 9.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 1.0) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 8.0 * 2.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 2.0) + 8.0 ) * 10.0),*,t * D * 100 * 2.0 * 8.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 2.0) + 8.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 7.0 * 3.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 3.0) + 7.0 ) * 10.0),*,t * D * 100 * 3.0 * 7.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 3.0) + 7.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 6.0 * 4.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 4.0) + 6.0 ) * 10.0),*,t * D * 100 * 4.0 * 6.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 4.0) + 6.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 5.0 * 5.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 5.0) + 5.0 ) * 10.0),*,t * D * 100 * 5.0 * 5.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 5.0) + 5.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 4.0 * 6.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 6.0) + 4.0 ) * 10.0),*,t * D * 100 * 6.0 * 4.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 6.0) + 4.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 3.0 * 7.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 7.0) + 3.0 ) * 10.0),*,t * D * 100 * 7.0 * 3.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 7.0) + 3.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 2.0 * 8.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 8.0) + 2.0 ) * 10.0),*,t * D * 100 * 8.0 * 2.0 * (1.0 + rateCatSel * (st - sc) ) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 8.0) + 2.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,t * D * 100 * 9.0 * (1.0 + rateCatSel * (st - sc)) /( ( ( (1.0 + rateCatSel * (st - sc) ) * 9.0) + 1.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 1.0 * 9.0 /( ( ( (1.0 + rateCatSel * (st - sc) ) * 9.0) + 1.0 ) * 10.0),*,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,t * D * 100 * 9.0 /( ( (1.0 + rateCatSel * (st - sg) ) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,*,t * D * 100 * 1.0 * 9.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 1.0) + 9.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 8.0 * 2.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 2.0) + 8.0 ) * 10.0),*,t * D * 100 * 2.0 * 8.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 2.0) + 8.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 7.0 * 3.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 3.0) + 7.0 ) * 10.0),*,t * D * 100 * 3.0 * 7.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 3.0) + 7.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 6.0 * 4.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 4.0) + 6.0 ) * 10.0),*,t * D * 100 * 4.0 * 6.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 4.0) + 6.0 ) * 10.0),0.0,0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 5.0 * 5.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 5.0) + 5.0 ) * 10.0),*,t * D * 100 * 5.0 * 5.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 5.0) + 5.0 ) * 10.0),0.0,0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 4.0 * 6.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 6.0) + 4.0 ) * 10.0),*,t * D * 100 * 6.0 * 4.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 6.0) + 4.0 ) * 10.0),0.0,0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 3.0 * 7.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 7.0) + 3.0 ) * 10.0),*,t * D * 100 * 7.0 * 3.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 7.0) + 3.0 ) * 10.0),0.0}
{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 2.0 * 8.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 8.0) + 2.0 ) * 10.0),*,t * D * 100 * 8.0 * 2.0 * (1.0 + rateCatSel * (st - sg) ) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 8.0) + 2.0 ) * 10.0)}
{0.0,0.0,0.0,t * D * 100 * 9.0 * (1.0 + rateCatSel * (st - sg)) /( ( ( (1.0 + rateCatSel * (st - sg) ) * 9.0) + 1.0 ) * 10.0),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,t * D * 100 * 1.0 * 9.0 /( ( ( (1.0 + rateCatSel * (st - sg) ) * 9.0) + 1.0 ) * 10.0),*}
};






/*Find Root*/

/*Defining matrix as sparse*/

dim = Rows (matrix1);
sparse_matrix = {dim,dim};
Model M2 = (matrix1, Freqs, 0);

for (r = 0; r < dim; r += 1) {
    for (c = 0; c < dim; c+=1) {
        if (r != c) {
            GetString (info, M2, r, c); 
            if (Abs (info) > 0 && info != "0") {
                ExecuteCommands ("sparse_matrix[r][c]:=" + info);
            }
        }
    }
}

Model M1 = (sparse_matrix, Freqs,0);

ACCEPT_ROOTED_TREES=1;
AUTOMATICALLY_CONVERT_BRANCH_LENGTHS = 1;

treeString="";
treeString = RerootTree (treeString, 0);
Tree   testTree2 = treeString;
Lea2= TipCount(testTree2);
Int2= BranchCount(testTree2);
BranchCount2= Lea2+Int2;


fprintf (stdout, "\n Starting tree:	",testTree2,"\n");
fprintf (stdout, "\n INTERNAL BRANCHES:	",Int2,"\n");

for (ibc2 = 0; ibc2 < BranchCount2; ibc2=ibc2+1)											/*iterating over roots*/
{
	if (ibc2<Int2)
	{
		Tree Tree2 = treeString;
		aBranch2   = BranchName (Tree2,ibc2);
		testTreest = RerootTree (Tree2, aBranch2);
	}
	else
	{
		Tree Tree2 = treeString;
		aBranch2   = TipName (Tree2,ibc2-Int2);
		testTreest = RerootTree (Tree2, aBranch2);
	}
	
	fprintf (stdout, "\n before TREE:	",testTreest,"\n");
	sampTree = addSamplingLeaves(testTreest);
	Model M1 = (sparse_matrix, Freqs,0);
	Tree testTree=sampTree;
	fprintf (stdout, "\n Rooting with sampling");
	fprintf (stdout, "\n TREE STRING:	",sampTree,"\n");
	fprintf (stdout, "\n TREE:	",testTree,"\n");
	LikelihoodFunction theLF = (filteredData, testTree);
	MolecularClockNoLeaves (testTree,t);
	Optimize (res, theLF);
	fprintf (stdout, "\n One root, after optimization, lk:	",res[1][0],"\n");
	fprintf (stdout, theLF,"\n\n");
	if (ibc2==0)
	{
		bestabs=res[1][0];
		fprintf (out2,CLEAR_FILE,theLF,"\n\n");
		fprintf (stdout, theLF,"\n\n");
		bestTree=testTreest;
	}

	if (res[1][0]>bestabs)
	{
		bestabs=res[1][0];
		fprintf (out2,theLF,"\n\n");
		fprintf (stdout, theLF,"\n\n");
		bestTree=testTreest;
	}

}












/*---------------------------------------------------------------*/

function addSamplingLeaves (aNoSamp)
{
	Nsamples={{"10"}{"10"}{"10"}{"10"}};
	FinalStr="";
	StringLen = Abs (aNoSamp);
	StringInd=0;
	while (StringInd<StringLen)
	{
		if(aNoSamp[StringInd]=="s")
		{
			StringInd2=StringInd+1;
			sp_number="";
			while ((StringInd2<StringLen)&&(aNoSamp[StringInd2]!=";")&&(aNoSamp[StringInd2]!=")")&&(aNoSamp[StringInd2]!=":")&&(aNoSamp[StringInd2]!="(")&&(aNoSamp[StringInd2]!=","))
			{
				sp_number=sp_number+aNoSamp[StringInd2];
				StringInd2=StringInd2+1;
			}
			addendumStr="(s"+sp_number+"{Mto"+Nsamples[convert_to_integer(sp_number)-1]+"}:1.0)u"+sp_number+"{M1}";
			FinalStr=FinalStr+addendumStr;
			StringInd=StringInd2;
		}
		else
		{
			FinalStr=FinalStr+aNoSamp[StringInd];
			StringInd=StringInd+1;
		}	
	}	
	return FinalStr;
}



/*---------------------------------------------------------------*/

function convert_to_integer (strin)
{
	chars={{"0"}{"1"}{"2"}{"3"}{"4"}{"5"}{"6"}{"7"}{"8"}{"9"}};
	StringLeng = Abs (strin);
	StringIndex=0;
	total=0;
	while (StringIndex<StringLeng)
	{
		charac=strin[(StringLeng-1)-StringIndex];
		for (i4 = 0; i4 < 10; i4=i4+1)
		{
			if(chars[i4]==charac)
			{
				total=total+(10^(StringIndex))*i4;
			}
		}
		StringIndex=StringIndex+1;
	}
	return total;
}


